# .github/workflows/deploy.yml
name: Build and Deploy Full Repo to DigitalOcean

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci

    - name: Generate Prisma client
      run: npx prisma generate
      
    - name: Build application
      run: npm run build
      env:
        NODE_ENV: production
        DATABASE_URL: ${{ secrets.DATABASE_URL }}
        NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
        NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
        NEXT_PUBLIC_ENGINE_API_URL: ${{ secrets.NEXT_PUBLIC_ENGINE_API_URL }}
        NEXT_PUBLIC_WS_URL: ${{ secrets.NEXT_PUBLIC_WS_URL }}
        NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
        CI: true
        NEXT_TELEMETRY_DISABLED: 1

    - name: Archive project
      run: |
        tar --exclude='./node_modules' --exclude='./.git' -czf app.tar.gz .

    - name: Upload to server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.DROPLET_HOST }}
        username: ${{ secrets.DROPLET_USERNAME }}
        key: ${{ secrets.DROPLET_SSH_KEY }}
        port: ${{ secrets.DROPLET_PORT || 22 }}
        source: "app.tar.gz"
        target: "/opt/pinnacle-algo"

    - name: Deploy and start app
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.DROPLET_HOST }}
        username: ${{ secrets.DROPLET_USERNAME }}
        key: ${{ secrets.DROPLET_SSH_KEY }}
        port: ${{ secrets.DROPLET_PORT || 22 }}
        script: |
          cd /opt/pinnacle-algo
          tar -xzf app.tar.gz && rm app.tar.gz
          npm install --omit=dev
          pm2 restart pinnacle-algo || pm2 start npm --name "pinnacle-algo" -- run start
          pm2 save
          pm2 status